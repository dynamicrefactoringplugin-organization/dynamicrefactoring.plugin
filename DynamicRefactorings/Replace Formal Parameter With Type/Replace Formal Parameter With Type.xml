<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refactoring SYSTEM "refactoringDTD.dtd">

<refactoring name="Replace Formal Parameter With Type" version="1.2">
	<information>
		<description>Removes the formal parameter from the class declaration, replacing the generic type for the completely instantiated type.</description>
		<image src="image.JPG" />
		<motivation>Given a generic class with subtype bounds, the actual substitution for one of its formal parameters is always the same.</motivation>
	</information>
	<inputs>
		<input type="moon.core.genericity.FormalPar" name="Parameter" root="true"/>
		<input type="moon.core.classdef.ClassType" name="New_type" from="Model" method="getClassDef"/>
		<input type="moon.core.classdef.ClassDef" name="Class" from="Parameter" method="getClassDef"/>
		<input type="moon.core.Model" name="Model" />
	</inputs>
	<mechanism>
		<preconditions>
			<precondition name="repository.moon.concretepredicate.IsSingleGenericInstance">
				<param name="Parameter"/>
				<param name="New_type"/>
			</precondition>
		</preconditions>
		<actions>
			<action name="repository.moon.concreteaction.RemoveFormalParameter">
				<param name="Parameter"/>
			</action>
			<action name="repository.moon.concreteaction.SubstituteFormalParameter">
				<param name="Parameter"/>
				<param name="New_type"/>				
			</action>
			<action name="repository.moon.concreteaction.RemoveRealParameter">
				<param name="Parameter"/>
			</action>
		</actions>
		<postconditions>
			<postcondition name="repository.moon.concretepredicate.IsNotFormalPar">
				<param name="Parameter"/>
				<param name="Class"/>
			</postcondition>
		</postconditions>
	</mechanism>
	<examples />
</refactoring>
